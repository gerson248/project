/**
 * @fileoverview added by tsickle
 * Generated from: object/create-reference.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { map } from 'rxjs/operators';
import { createObjectSnapshotChanges } from './snapshot-changes';
/**
 * @template T
 * @param {?} query
 * @param {?} afDatabase
 * @return {?}
 */
export function createObjectReference(query, afDatabase) {
    return {
        query,
        /**
         * @template T
         * @return {?}
         */
        snapshotChanges() {
            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(afDatabase.keepUnstableUntilFirst);
        },
        /**
         * @param {?} data
         * @return {?}
         */
        update(data) { return (/** @type {?} */ (query.ref.update((/** @type {?} */ (data))))); },
        /**
         * @param {?} data
         * @return {?}
         */
        set(data) { return (/** @type {?} */ (query.ref.set(data))); },
        /**
         * @return {?}
         */
        remove() { return (/** @type {?} */ (query.ref.remove())); },
        /**
         * @template T
         * @return {?}
         */
        valueChanges() {
            /** @type {?} */
            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();
            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map((/**
             * @param {?} action
             * @return {?}
             */
            action => action.payload.exists() ? (/** @type {?} */ (action.payload.val())) : null)));
        },
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXJlZmVyZW5jZS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9hbmd1bGFyZmlyZS9hbmd1bGFyZmlyZS9zcmMvZGF0YWJhc2UvIiwic291cmNlcyI6WyJvYmplY3QvY3JlYXRlLXJlZmVyZW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7Ozs7OztBQUdqRSxNQUFNLFVBQVUscUJBQXFCLENBQVMsS0FBb0IsRUFBRSxVQUErQjtJQUNqRyxPQUFPO1FBQ0wsS0FBSzs7Ozs7UUFDTCxlQUFlO1lBQ2IsT0FBTywyQkFBMkIsQ0FBSSxLQUFLLEVBQUUsVUFBVSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLElBQUksQ0FDdkYsVUFBVSxDQUFDLHNCQUFzQixDQUNsQyxDQUFDO1FBQ0osQ0FBQzs7Ozs7UUFDRCxNQUFNLENBQUMsSUFBZ0IsSUFBSSxPQUFPLG1CQUFBLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLG1CQUFBLElBQUksRUFBTyxDQUFDLEVBQWlCLENBQUMsQ0FBQyxDQUFDOzs7OztRQUNuRixHQUFHLENBQUMsSUFBTyxJQUFJLE9BQU8sbUJBQUEsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQWlCLENBQUMsQ0FBQyxDQUFDOzs7O1FBQzdELE1BQU0sS0FBSyxPQUFPLG1CQUFBLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQWlCLENBQUMsQ0FBQyxDQUFDOzs7OztRQUN4RCxZQUFZOztrQkFDSixnQkFBZ0IsR0FBRywyQkFBMkIsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUNuRyxPQUFPLGdCQUFnQixDQUFDLElBQUksQ0FDMUIsVUFBVSxDQUFDLHNCQUFzQixFQUNqQyxHQUFHOzs7O1lBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxtQkFBQSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUMxRSxDQUFDO1FBQ0osQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQW5ndWxhckZpcmVPYmplY3QsIERhdGFiYXNlUXVlcnkgfSBmcm9tICcuLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IGNyZWF0ZU9iamVjdFNuYXBzaG90Q2hhbmdlcyB9IGZyb20gJy4vc25hcHNob3QtY2hhbmdlcyc7XG5pbXBvcnQgeyBBbmd1bGFyRmlyZURhdGFiYXNlIH0gZnJvbSAnLi4vZGF0YWJhc2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlT2JqZWN0UmVmZXJlbmNlPFQ9IGFueT4ocXVlcnk6IERhdGFiYXNlUXVlcnksIGFmRGF0YWJhc2U6IEFuZ3VsYXJGaXJlRGF0YWJhc2UpOiBBbmd1bGFyRmlyZU9iamVjdDxUPiB7XG4gIHJldHVybiB7XG4gICAgcXVlcnksXG4gICAgc25hcHNob3RDaGFuZ2VzPFQ+KCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZU9iamVjdFNuYXBzaG90Q2hhbmdlczxUPihxdWVyeSwgYWZEYXRhYmFzZS5zY2hlZHVsZXJzLm91dHNpZGVBbmd1bGFyKSgpLnBpcGUoXG4gICAgICAgIGFmRGF0YWJhc2Uua2VlcFVuc3RhYmxlVW50aWxGaXJzdFxuICAgICAgKTtcbiAgICB9LFxuICAgIHVwZGF0ZShkYXRhOiBQYXJ0aWFsPFQ+KSB7IHJldHVybiBxdWVyeS5yZWYudXBkYXRlKGRhdGEgYXMgYW55KSBhcyBQcm9taXNlPHZvaWQ+OyB9LFxuICAgIHNldChkYXRhOiBUKSB7IHJldHVybiBxdWVyeS5yZWYuc2V0KGRhdGEpIGFzIFByb21pc2U8dm9pZD47IH0sXG4gICAgcmVtb3ZlKCkgeyByZXR1cm4gcXVlcnkucmVmLnJlbW92ZSgpIGFzIFByb21pc2U8dm9pZD47IH0sXG4gICAgdmFsdWVDaGFuZ2VzPFQ+KCkge1xuICAgICAgY29uc3Qgc25hcHNob3RDaGFuZ2VzJCA9IGNyZWF0ZU9iamVjdFNuYXBzaG90Q2hhbmdlcyhxdWVyeSwgYWZEYXRhYmFzZS5zY2hlZHVsZXJzLm91dHNpZGVBbmd1bGFyKSgpO1xuICAgICAgcmV0dXJuIHNuYXBzaG90Q2hhbmdlcyQucGlwZShcbiAgICAgICAgYWZEYXRhYmFzZS5rZWVwVW5zdGFibGVVbnRpbEZpcnN0LFxuICAgICAgICBtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkLmV4aXN0cygpID8gYWN0aW9uLnBheWxvYWQudmFsKCkgYXMgVCA6IG51bGwpXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59XG4iXX0=