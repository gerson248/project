{"version":3,"file":"angular-fire-messaging.js","sources":["../../../src/messaging/base.ts","../../../src/messaging/messaging.ts","../../../src/messaging/messaging.module.ts"],"sourcesContent":["export const proxyPolyfillCompat = {\n  deleteToken: null,\n  getToken: null,\n  onMessage: null,\n  onBackgroundMessage: null,\n  onTokenRefresh: null,\n  requestPermission: null,\n  setBackgroundMessageHandler: null,\n  useServiceWorker: null,\n  usePublicVapidKey: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\nimport { concat, EMPTY, Observable, of, throwError, fromEvent } from 'rxjs';\nimport { catchError, defaultIfEmpty, map, mergeMap, observeOn, switchMap, switchMapTo, shareReplay, filter, subscribeOn } from 'rxjs/operators';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵlazySDKProxy,\n  ɵPromiseProxy,\n  ɵapplyMixins\n} from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport const VAPID_KEY = new InjectionToken<string>('angularfire2.messaging.vapid-key');\nexport const SERVICE_WORKER = new InjectionToken<Promise<ServiceWorkerRegistration>>('angularfire2.messaging.service-worker-registeration');\n\n// SEMVER(7): drop\nconst firebaseLTv8 = parseInt(firebase.SDK_VERSION, 10) < 8;\n\nexport interface AngularFireMessaging extends Omit<ɵPromiseProxy<firebase.messaging.Messaging>, 'deleteToken' | 'getToken' | 'requestPermission'> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireMessaging {\n\n  public readonly requestPermission: Observable<void>;\n  public readonly getToken: Observable<string | null>;\n  public readonly tokenChanges: Observable<string | null>;\n  public readonly messages: Observable<{}>;\n  public readonly requestToken: Observable<string | null>;\n  public readonly deleteToken: (token: string) => Observable<boolean>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(VAPID_KEY) vapidKey: string|null,\n    @Optional() @Inject(SERVICE_WORKER) _serviceWorker: any,\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const serviceWorker: Promise<ServiceWorkerRegistration> | null = _serviceWorker;\n\n    const messaging = of(undefined).pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(() => isPlatformServer(platformId) ? EMPTY : import('firebase/messaging')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      switchMap(app => ɵfetchInstance(`${app.name}.messaging`, 'AngularFireMessaging', app, async () => {\n        const messaging = app.messaging();\n        if (firebaseLTv8) {\n          if (vapidKey) {\n            messaging.usePublicVapidKey(vapidKey);\n          }\n          if (serviceWorker) {\n            messaging.useServiceWorker(await serviceWorker);\n          }\n        }\n        return messaging;\n      }, [vapidKey, serviceWorker])),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    this.requestPermission = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      // tslint:disable-next-line\n      switchMap(messaging => firebase.messaging.isSupported() ? messaging.requestPermission() : throwError('Not supported.'))\n    );\n\n    this.getToken = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(async messaging => {\n        if (firebase.messaging.isSupported() && Notification.permission === 'granted') {\n          if (firebaseLTv8) {\n            return await messaging.getToken();\n          } else {\n            const serviceWorkerRegistration = serviceWorker ? await serviceWorker : null;\n            return await messaging.getToken({ vapidKey, serviceWorkerRegistration });\n          }\n        } else {\n          return null;\n        }\n      })\n    );\n\n    const notificationPermission$ = new Observable<string>(emitter => {\n      navigator.permissions.query({ name: 'notifications' }).then(notificationPerm => {\n        notificationPerm.onchange = () => emitter.next();\n      });\n    });\n\n    const tokenChange$ = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMapTo(notificationPermission$),\n      switchMapTo(this.getToken)\n    );\n\n    this.tokenChanges = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(() => firebase.messaging.isSupported() ? concat(this.getToken, tokenChange$) : EMPTY)\n    );\n\n\n    this.messages = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? new Observable<string>(emitter =>\n        messaging.onMessage(next => emitter.next(next), err => emitter.error(err), () => emitter.complete())\n      ) : EMPTY),\n    );\n\n    this.requestToken = of(undefined).pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(() => this.requestPermission),\n      catchError(() => of(null)),\n      mergeMap(() => this.tokenChanges)\n    );\n\n    // SEMVER(7): drop token\n    this.deleteToken = (token?: string) => messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => messaging.deleteToken(token || undefined)),\n      defaultIfEmpty(false)\n    );\n\n    return ɵlazySDKProxy(this, messaging, zone);\n  }\n\n}\n\nɵapplyMixins(AngularFireMessaging, [proxyPolyfillCompat]);\n","import { NgModule } from '@angular/core';\nimport { AngularFireMessaging } from './messaging';\n\n@NgModule({\n  providers: [ AngularFireMessaging ]\n})\nexport class AngularFireMessagingModule { }\n"],"names":[],"mappings":"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"}