(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('rxjs'), require('rxjs/operators'), require('@angular/fire/auth')) :
    typeof define === 'function' && define.amd ? define('@angular/fire/auth-guard', ['exports', '@angular/core', '@angular/router', 'rxjs', 'rxjs/operators', '@angular/fire/auth'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.angular = global.angular || {}, global.angular.fire = global.angular.fire || {}, global.angular.fire['auth-guard'] = {}), global.ng.core, global.ng.router, global.rxjs, global.rxjs.operators, global.angular.fire.auth));
}(this, (function (exports, i0, i1, rxjs, operators, i2) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: auth-guard.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ɵ0 = /**
     * @param {?} user
     * @return {?}
     */ function (/**
     * @param {?} user
     * @return {?}
     */ user) { return !!user; };
    /** @type {?} */
    var loggedIn = operators.map((ɵ0));
    var AngularFireAuthGuard = /** @class */ (function () {
        /**
         * @param {?} router
         * @param {?} auth
         */
        function AngularFireAuthGuard(router, auth) {
            var _this = this;
            this.router = router;
            this.auth = auth;
            this.canActivate = ( /**
             * @param {?} next
             * @param {?} state
             * @return {?}
             */function (next, state) {
                /** @type {?} */
                var authPipeFactory = ( /** @type {?} */(next.data.authGuardPipe)) || (( /**
                 * @return {?}
                 */function () { return loggedIn; }));
                return _this.auth.user.pipe(operators.take(1), authPipeFactory(next, state), operators.map(( /**
                 * @param {?} can
                 * @return {?}
                 */function (/**
                 * @param {?} can
                 * @return {?}
                 */ can) {
                    if (typeof can === 'boolean') {
                        return can;
                    }
                    else if (Array.isArray(can)) {
                        return _this.router.createUrlTree(can);
                    }
                    else {
                        // TODO(EdricChan03): Add tests
                        return _this.router.parseUrl(can);
                    }
                })));
            });
        }
        return AngularFireAuthGuard;
    }());
    AngularFireAuthGuard.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'any'
                },] }
    ];
    /** @nocollapse */
    AngularFireAuthGuard.ctorParameters = function () { return [
        { type: i1.Router },
        { type: i2.AngularFireAuth }
    ]; };
    /** @nocollapse */ AngularFireAuthGuard.ɵprov = i0.ɵɵdefineInjectable({ factory: function AngularFireAuthGuard_Factory() { return new AngularFireAuthGuard(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth)); }, token: AngularFireAuthGuard, providedIn: "any" });
    if (false) {
        /** @type {?} */
        AngularFireAuthGuard.prototype.canActivate;
        /**
         * @type {?}
         * @private
         */
        AngularFireAuthGuard.prototype.router;
        /**
         * @type {?}
         * @private
         */
        AngularFireAuthGuard.prototype.auth;
    }
    /** @type {?} */
    var canActivate = ( /**
     * @param {?} pipe
     * @return {?}
     */function (pipe) { return ({
        canActivate: [AngularFireAuthGuard], data: { authGuardPipe: pipe }
    }); });
    var ɵ1 = /**
     * @param {?} user
     * @return {?}
     */ function (/**
     * @param {?} user
     * @return {?}
     */ user) { return !!user && !user.isAnonymous; };
    /** @type {?} */
    var isNotAnonymous = operators.map((ɵ1));
    var ɵ2 = /**
     * @param {?} user
     * @return {?}
     */ function (user) { return user ? user.getIdTokenResult() : rxjs.of(null); };
    /** @type {?} */
    var idTokenResult = operators.switchMap((ɵ2));
    var ɵ3 = /**
     * @param {?} user
     * @return {?}
     */ function (/**
     * @param {?} user
     * @return {?}
     */ user) { return !!user && user.emailVerified; };
    /** @type {?} */
    var emailVerified = operators.map((ɵ3));
    var ɵ4 = /**
     * @param {?} idTokenResult
     * @return {?}
     */ function (/**
     * @param {?} idTokenResult
     * @return {?}
     */ idTokenResult) { return idTokenResult ? idTokenResult.claims : []; };
    /** @type {?} */
    var customClaims = rxjs.pipe(idTokenResult, operators.map((ɵ4)));
    /** @type {?} */
    var hasCustomClaim = ( /**
     * @param {?} claim
     * @return {?}
     */function (claim) { return rxjs.pipe(customClaims, operators.map(( /**
     * @param {?} claims
     * @return {?}
     */function (/**
     * @param {?} claims
     * @return {?}
     */ claims) { return claims.hasOwnProperty(claim); }))); });
    /** @type {?} */
    var redirectUnauthorizedTo = ( /**
     * @param {?} redirect
     * @return {?}
     */function (redirect) { return rxjs.pipe(loggedIn, operators.map(( /**
     * @param {?} loggedIn
     * @return {?}
     */function (/**
     * @param {?} loggedIn
     * @return {?}
     */ loggedIn) { return loggedIn || redirect; }))); });
    /** @type {?} */
    var redirectLoggedInTo = ( /**
     * @param {?} redirect
     * @return {?}
     */function (redirect) { return rxjs.pipe(loggedIn, operators.map(( /**
     * @param {?} loggedIn
     * @return {?}
     */function (/**
     * @param {?} loggedIn
     * @return {?}
     */ loggedIn) { return loggedIn && redirect || true; }))); });

    /**
     * @fileoverview added by tsickle
     * Generated from: auth-guard.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var AngularFireAuthGuardModule = /** @class */ (function () {
        function AngularFireAuthGuardModule() {
        }
        return AngularFireAuthGuardModule;
    }());
    AngularFireAuthGuardModule.decorators = [
        { type: i0.NgModule, args: [{
                    providers: [AngularFireAuthGuard]
                },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: public_api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: angular-fire-auth-guard.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.AngularFireAuthGuard = AngularFireAuthGuard;
    exports.AngularFireAuthGuardModule = AngularFireAuthGuardModule;
    exports.canActivate = canActivate;
    exports.customClaims = customClaims;
    exports.emailVerified = emailVerified;
    exports.hasCustomClaim = hasCustomClaim;
    exports.idTokenResult = idTokenResult;
    exports.isNotAnonymous = isNotAnonymous;
    exports.loggedIn = loggedIn;
    exports.redirectLoggedInTo = redirectLoggedInTo;
    exports.redirectUnauthorizedTo = redirectUnauthorizedTo;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-fire-auth-guard.umd.js.map
