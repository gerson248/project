{"version":3,"sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"names":["loggedIn","map","user","router","auth","_this","this","canActivate","next","state","authPipeFactory","data","pipe","take","can","Array","isArray","createUrlTree","parseUrl","Injectable","args","providedIn","Router","AngularFireAuth","isNotAnonymous","isAnonymous","idTokenResult","switchMap","getIdTokenResult","of","emailVerified","customClaims","claims","NgModule","providers","AngularFireAuthGuard","authGuardPipe","claim","hasOwnProperty","redirect"],"mappings":"onBAUaA,EAAqBC,EAAAA,KAAI,SAAAC,GAAQ,QAAEA,OAO9C,SAAoBC,EAAwBC,GAA5C,IAAAC,EAAAC,KAAoBA,KAAAH,OAAAA,EAAwBG,KAAAF,KAAAA,EAE5CE,KAAAC,YAAW,SAAIC,EAA8BC,OACrCC,EAAkBF,EAAKG,KAAkB,eAAA,WAAgC,OAAAX,GAC/E,OAAOK,EAAKD,KAAKF,KAAKU,KACpBC,EAAAA,KAAK,GACLH,EAAgBF,EAAMC,GACtBR,EAAAA,KAAG,SAACa,GACF,MAAmB,kBAARA,EACFA,EACEC,MAAMC,QAAQF,GAChBT,EAAKF,OAAOc,cAAcH,GAG1BT,EAAKF,OAAOe,SAASJ,6BAnBrCK,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,mDAZgCC,EAAAA,cAIrCC,EAAAA,qKAuCIC,EAA2BvB,EAAAA,KAAI,SAAAC,GAAQ,QAAEA,IAASA,EAAKuB,eACvDC,EAAgBC,EAAAA,WAAU,SAACzB,GAA6B,OAAAA,EAAOA,EAAK0B,mBAAqBC,EAAAA,GAAG,SAC5FC,EAA0B7B,EAAAA,KAAI,SAAAC,GAAQ,QAAEA,GAAQA,EAAK4B,iBACrDC,EAAenB,EAAAA,KAAKc,EAAezB,EAAAA,KAAI,SAAAyB,GAAiB,OAAAA,EAAgBA,EAAcM,OAAS,SCzC5G,iCAHCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,UAAW,CAAEC,6EDmCS,SAAIvB,GAA4B,MAAA,CACtDL,YAAa,CAAE4B,GAAwBxB,KAAM,CAAEyB,cAAexB,yDAQrC,SACxByB,GAAU,OAAAzB,EAAAA,KAAKmB,EAAc9B,EAAAA,KAAG,SAAC+B,GAAW,OAAAA,EAAOM,eAAeD,+EAGtC,SAC5BE,GAAa,OAAA3B,EAAAA,KAAKZ,EAAUC,EAAAA,KAAG,SAACD,GAAY,OAAAA,GAAYuC,IAAY,gCAHpC,SAChCA,GAAa,OAAA3B,EAAAA,KAAKZ,EAAUC,EAAAA,KAAG,SAACD,GAAY,OAAAA,GAAYuC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}