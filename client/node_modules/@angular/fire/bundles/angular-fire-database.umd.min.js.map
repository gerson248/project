{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../src/database/utils.ts","../../../src/database/observable/fromRef.ts","../../../src/database/list/changes.ts","../../../src/database/list/utils.ts","../../../src/database/list/snapshot-changes.ts","../../../src/database/list/state-changes.ts","../../../src/database/list/audit-trail.ts","../../../src/database/list/data-operation.ts","../../../src/database/list/create-reference.ts","../../../src/database/list/remove.ts","../../../src/database/object/snapshot-changes.ts","../../../src/database/database.ts","../../../src/database/object/create-reference.ts","../../../src/database/database.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","isNil","obj","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","firebaseCase","exportVal","isFirebaseDataSnapshot","snapshotCase","Error","fromRef","event","listenType","scheduler","rxjs","asyncScheduler","Observable","subscriber","fn","snapshot","prevKey","schedule","complete","err","unsubscribe","off","pipe","map","payload","key","exists","type","share","listChanges","events","switchMap","snapshotAction","childEvent$","of","forEach","merge","apply","scan","buildView","distinctUntilChanged","positionFor","changes","len","current","action","currentKeyPosition","afterPreviousKeyPosition","positionAfter","prevKey_1","previous","filter","x","splice","slice","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","action$","lastKeyToLoad","child","loadedData","withLatestFrom","_a","_b","loaded","actions","loadedKeys","snap","skipWhile","meta","indexOf","waitForLoaded","createDataOperationMethod","operation","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","remove","keepUnstableUntilFirst","valueChanges","options","a","idField","assign","val","createObjectSnapshotChanges","URL","InjectionToken","USE_EMULATOR","AngularFireDatabase","nameOrConfig","databaseURL","platformId","zone","_useEmulator","useAuthEmulator","this","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","useEmulator","app","ɵfirebaseAppFactory","firebase","auth","ɵlogAuthEmulatorError","ɵfetchInstance","name","runOutsideAngular","undefined","prototype","list","pathOrRef","queryFn","_this","object","createPushId","Injectable","args","providedIn","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","decorators","PLATFORM_ID","NgZone","USE_AUTH_EMULATOR","NgModule","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DatabaseReference, FirebaseOperation, FirebaseOperationCases, PathReference } from './interfaces';\nimport firebase from 'firebase/app';\n\nexport function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\nexport function isFirebaseDataSnapshot(value: any): boolean {\n  return typeof value.exportVal === 'function';\n}\n\nexport function isNil(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isFirebaseRef(value: any): boolean {\n  return typeof value.set === 'function';\n}\n\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nexport function getRef(database: firebase.database.Database, pathRef: PathReference): DatabaseReference {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef as DatabaseReference\n    : database.ref(pathRef as string);\n}\n\nexport function checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases): Promise<void> {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n","import { AngularFireAction, DatabaseQuery, DatabaseSnapshot, ListenEvent } from '../interfaces';\nimport { asyncScheduler, Observable, SchedulerLike } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\ninterface SnapshotPrevKey<T> {\n  snapshot: DatabaseSnapshot<T>;\n  prevKey: string | null | undefined;\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nexport function fromRef<T>(ref: DatabaseQuery,\n                           event: ListenEvent,\n                           listenType = 'on',\n                           scheduler: SchedulerLike = asyncScheduler\n): Observable<AngularFireAction<DatabaseSnapshot<T>>> {\n  return new Observable<SnapshotPrevKey<T>>(subscriber => {\n    let fn: any | null = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({ snapshot, prevKey });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        unsubscribe() {\n        }\n      };\n    }\n  }).pipe(\n    map(payload => {\n      const { snapshot, prevKey } = payload;\n      let key: string | null = null;\n      if (snapshot.exists()) {\n        key = snapshot.key;\n      }\n      return { type: event, payload: snapshot, prevKey, key };\n    }),\n    share()\n  );\n}\n","import { fromRef } from '../observable/fromRef';\nimport { merge, Observable, of, SchedulerLike } from 'rxjs';\n\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { isNil } from '../utils';\n\nimport { distinctUntilChanged, scan, switchMap } from 'rxjs/operators';\n\nexport function listChanges<T = any>(ref: DatabaseQuery, events: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(\n    switchMap(snapshotAction => {\n      const childEvent$ = [of(snapshotAction)];\n      events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n      return merge(...childEvent$).pipe(scan(buildView, []));\n    }),\n    distinctUntilChanged()\n  );\n}\n\nfunction positionFor<T>(changes: SnapshotAction<T>[], key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction positionAfter<T>(changes: SnapshotAction<T>[], prevKey?: string) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const { payload, prevKey, key } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = { payload, type: 'value', prevKey, key: payload.key };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n","import { isNil } from '../utils';\n\nexport function validateEventsArray(events?: any[]) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { listChanges } from './changes';\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { validateEventsArray } from './utils';\n\nexport function snapshotChanges<T>(\n  query: DatabaseQuery,\n  events?: ChildEvent[],\n  scheduler?: SchedulerLike\n): Observable<SnapshotAction<T>[]> {\n  events = validateEventsArray(events);\n  return listChanges<T>(query, events, scheduler);\n}\n","import { ChildEvent, DatabaseQuery } from '../interfaces';\nimport { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { merge, SchedulerLike } from 'rxjs';\n\nexport function stateChanges<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef<T>(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n","import { AngularFireAction, ChildEvent, DatabaseQuery, DataSnapshot, SnapshotAction } from '../interfaces';\nimport { stateChanges } from './state-changes';\nimport { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\n\nimport { map, scan, skipWhile, withLatestFrom } from 'rxjs/operators';\n\nexport function auditTrail<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  const auditTrail$ = stateChanges<T>(query, events)\n    .pipe(\n      scan((current, action) => [...current, action], [])\n    );\n  return waitForLoaded<T>(query, auditTrail$, scheduler);\n}\n\ninterface LoadedMetadata {\n  data: AngularFireAction<DataSnapshot>;\n  lastKeyToLoad: any;\n}\n\nfunction loadedData<T>(query: DatabaseQuery, scheduler?: SchedulerLike): Observable<LoadedMetadata> {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef<T>(query, 'value', 'on', scheduler)\n  .pipe(\n    map(data => {\n      // Store the last key in the data set\n      let lastKeyToLoad;\n      // Loop through loaded dataset to find the last key\n      data.payload.forEach(child => {\n        lastKeyToLoad = child.key; return false;\n      });\n      // return data set and the current last key loaded\n      return { data, lastKeyToLoad };\n    })\n  );\n}\n\nfunction waitForLoaded<T>(query: DatabaseQuery, action$: Observable<SnapshotAction<T>[]>, scheduler?: SchedulerLike) {\n  const loaded$ = loadedData<T>(query, scheduler);\n  return loaded$\n    .pipe(\n      withLatestFrom(action$),\n      // Get the latest values from the \"loaded\" and \"child\" datasets\n      // We can use both datasets to form an array of the latest values.\n      map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n      }),\n      // This is the magical part, only emit when the last load key\n      // in the dataset has been loaded by a child event. At this point\n      // we can assume the dataset is \"whole\".\n      skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n      // Pluck off the meta data because the user only cares\n      // to iterate through the snapshots\n      map(meta => meta.actions)\n    );\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\nexport function createDataOperationMethod<T>(ref: DatabaseReference, operation: string) {\n  return function dataOperation<T>(item: FirebaseOperation, value: T) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string)[operation](value),\n      firebaseCase: () => (item as DatabaseReference)[operation](value),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref[operation](value)\n    });\n  };\n}\n","import { AngularFireList, ChildEvent, DatabaseQuery } from '../interfaces';\nimport { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { AngularFireDatabase } from '../database';\nimport { map } from 'rxjs/operators';\n\nexport function createListReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireList<T> {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod<Partial<T>>(refInZone, 'update'),\n    set: createDataOperationMethod<T>(refInZone, 'set'),\n    push: (data: T) => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events?: ChildEvent[]) {\n      return snapshotChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    stateChanges(events?: ChildEvent[]) {\n      return stateChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    auditTrail(events?: ChildEvent[]) {\n      return auditTrail<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    valueChanges<K extends string>(events?: ChildEvent[], options?: {idField?: K}) {\n      const snapshotChanges$ = snapshotChanges<T>(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(\n        map(actions => actions.map(a => {\n          if (options && options.idField) {\n            return {\n              ...a.payload.val() as T,\n              ...{\n                [options.idField]: a.key\n              }\n            };\n          } else {\n            return a.payload.val() as T;\n          }\n        })),\n        afDatabase.keepUnstableUntilFirst\n      );\n    }\n  };\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nexport function createRemoveMethod<T>(ref: DatabaseReference) {\n  return function remove(item?: FirebaseOperation): any {\n    if (!item) { return ref.remove(); }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string).remove(),\n      firebaseCase: () => (item as DatabaseReference).remove(),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref.remove()\n    });\n  };\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\nimport { DatabaseQuery, SnapshotAction } from '../interfaces';\n\nexport function createObjectSnapshotChanges<T>(query: DatabaseQuery, scheduler?: SchedulerLike) {\n  return function snapshotChanges(): Observable<SnapshotAction<T>> {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { AngularFireList, AngularFireObject, DatabaseQuery, PathReference, QueryFn } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory,\n} from '@angular/fire';\nimport { Observable } from 'rxjs';\nimport 'firebase/database';\nimport { USE_EMULATOR as USE_AUTH_EMULATOR } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\nimport { ɵfetchInstance, ɵlogAuthEmulatorError } from '@angular/fire';\n\nexport const URL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\n// SEMVER(7): use Parameters to detirmine the useEmulator arguments\n// TODO(jamesdaniels): don't hardcode, but having tyepscript issues with firebase.database.Database\n// type UseEmulatorArguments = Parameters<typeof firebase.database.Database.prototype.useEmulator>;\ntype UseEmulatorArguments = [string, number];\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.database.use-emulator');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireDatabase {\n  public readonly database: firebase.database.Database;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n  public readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    @Optional() @Inject(URL) databaseURL: string | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // tuple isn't working here\n    @Optional() @Inject(USE_AUTH_EMULATOR) useAuthEmulator: any,\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n\n    const useEmulator: UseEmulatorArguments | null = _useEmulator;\n    const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n\n    if (!firebase.auth && useAuthEmulator) {\n      ɵlogAuthEmulatorError();\n    }\n\n    this.database = ɵfetchInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n      return database;\n    }, [useEmulator]);\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query: DatabaseQuery = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T> {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n","import { map } from 'rxjs/operators';\nimport { AngularFireObject, DatabaseQuery } from '../interfaces';\nimport { createObjectSnapshotChanges } from './snapshot-changes';\nimport { AngularFireDatabase } from '../database';\n\nexport function createObjectReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireObject<T> {\n  return {\n    query,\n    snapshotChanges<T>() {\n      return createObjectSnapshotChanges<T>(query, afDatabase.schedulers.outsideAngular)().pipe(\n        afDatabase.keepUnstableUntilFirst\n      );\n    },\n    update(data: Partial<T>) { return query.ref.update(data as any) as Promise<void>; },\n    set(data: T) { return query.ref.set(data) as Promise<void>; },\n    remove() { return query.ref.remove() as Promise<void>; },\n    valueChanges<T>() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(\n        afDatabase.keepUnstableUntilFirst,\n        map(action => action.payload.exists() ? action.payload.val() as T : null)\n      );\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireDatabase } from './database';\n\n@NgModule({\n  providers: [ AngularFireDatabase ]\n})\nexport class AngularFireDatabaseModule { }\n"]}