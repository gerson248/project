{"version":3,"file":"angular-fire-auth-guard.umd.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"],"names":["map","take","Injectable","Router","AngularFireAuth","of","switchMap","pipe","NgModule"],"mappings":";;;;;;;;;;;;;;QAUsC;;;QAAA,IAAI,IAAI,OAAA,CAAC,CAAC,IAAI,GAAA;;QAAvC,QAAQ,GAAaA,aAAG;;;;;;QAOnC,8BAAoB,MAAc,EAAU,IAAqB;YAAjE,iBAAqE;YAAjD,WAAM,GAAN,MAAM,CAAQ;YAAU,SAAI,GAAJ,IAAI,CAAiB;YAEjE,gBAAW;;;;eAAG,UAAC,IAA4B,EAAE,KAA0B;;oBAC/D,eAAe,GAAG,mBAAA,IAAI,CAAC,IAAI,CAAC,aAAa;;mBAA0B,cAAM,OAAA,QAAQ,GAAA,EAAC;gBACxF,OAAO,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACxBC,cAAI,CAAC,CAAC,CAAC,EACP,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,EAC5BD,aAAG;;;mBAAC;;;oBAAA,GAAG;oBACL,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;wBAC5B,OAAO,GAAG,CAAC;qBACZ;yBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBAC7B,OAAO,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;qBACvC;yBAAM;;wBAEL,OAAO,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;qBAClC;iBACF,EAAC,CACH,CAAC;aACH,EAAA;SAlBoE;;;;gBALtEE,aAAU,SAAC;oBACV,UAAU,EAAE,KAAK;iBAClB;;;;gBAb6CC,SAAM;gBAI3CC,kBAAe;;;;;QActB,2CAgBC;;;;;QAlBW,sCAAsB;;;;;QAAE,oCAA6B;;;QAsBtD,WAAW;;;OAAG,UAAC,IAAuB,IAAK,QAAC;QACvD,WAAW,EAAE,CAAE,oBAAoB,CAAE,EAAE,IAAI,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE;KACrE,IAAC;;;;QAG0C;;;QAAA,IAAI,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,GAAA;;QAAlE,cAAc,GAAaJ,aAAG;;;;QACJ,UAAC,IAAwB,IAAK,OAAA,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAGK,OAAE,CAAC,IAAI,CAAC,GAAA;;QAAjG,aAAa,GAAGC,mBAAS;;;;QACK;;;QAAA,IAAI,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,GAAA;;QAAlE,aAAa,GAAaN,aAAG;;;;QACU;;;QAAA,aAAa,IAAI,OAAA,aAAa,GAAG,aAAa,CAAC,MAAM,GAAG,EAAE,GAAA;;QAAjG,YAAY,GAAGO,SAAI,CAAC,aAAa,EAAEP,aAAG,MAA4D;;QAClG,cAAc;;;OACzB,UAAC,KAAK,IAAK,OAAAO,SAAI,CAAC,YAAY,EAAEP,aAAG;;;OAAC;;;QAAA,MAAM,IAAK,OAAA,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC,GAAA;;QAChE,sBAAsB;;;OACjC,UAAC,QAAQ,IAAK,OAAAO,SAAI,CAAC,QAAQ,EAAEP,aAAG;;;OAAC;;;QAAA,QAAQ,IAAI,OAAA,QAAQ,IAAI,QAAQ,GAAA,EAAC,CAAC,GAAA;;QACxD,kBAAkB;;;OAC7B,UAAC,QAAQ,IAAK,OAAAO,SAAI,CAAC,QAAQ,EAAEP,aAAG;;;OAAC;;;QAAA,QAAQ,IAAI,OAAA,QAAQ,IAAI,QAAQ,IAAI,IAAI,GAAA,EAAC,CAAC,GAAA;;;;;;;;QC/C7E;;;;;gBAHCQ,WAAQ,SAAC;oBACR,SAAS,EAAE,CAAE,oBAAoB,CAAE;iBACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}